Wrapper Classes in Java
------------------------

What are Wrapper Classes? 
These are pre-defined classes in java which can contain primitive data types. Wrapper classes are always final 
(What does that mean?). Wrapper classes provide a way to use primitive data types (int, boolean, etc..) as objects.

Since you're now working with objects, you can use certain methods to get information about the specific object.
For example, the following methods are used to get the value associated with the corresponding wrapper object: 
intValue(), byteValue(), shortValue(), longValue(), floatValue(), doubleValue(), charValue(), booleanValue().

Another useful method is the toString() method, which is used to convert wrapper objects to strings.

Types of Wrapper Classes.
Boolean are Character wrapper classes - Parent class is object
Rest 6 - Parent class is a Number.

Different Examples - Parsing
Boxing, Autoboxing, Unboxing, AutoUnboxing

Why we need Wrapper Classes?
When we use Collection framework. Some libraries in java can't deal with primitive data types rather they only deal
with objects. 

Sometimes you must use wrapper classes, for example when working with Collection objects, such as ArrayList, where
primitive types cannot be used (the list can only store objects):

primitive data types - Wrapper Classes

int - 		Integar
char -		Character
double - 	Double
float - 	Float
long - 		Long
boolean - 	Boolean
short - 	Short
byte - 		Byte